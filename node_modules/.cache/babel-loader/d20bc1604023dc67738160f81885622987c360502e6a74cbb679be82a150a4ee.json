{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/Comment.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Commentview from './Commentview';\nimport CommentWrite from './CommentWrite';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getComment } from '../../modules/commentSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment() {\n  console.log(commentLists);\n\n  // let today = new Date();\n  // const [commentList, setCommentList] = useState({\n  //   // id: ,\n  //   comment: '',\n  //   userId: '',\n  //   userPw: '',\n  //   date: today.toLocaleDateString(),\n  // });\n\n  return /*#__PURE__*/_jsxDEV(StyleCommentWrap, {\n    children: [/*#__PURE__*/_jsxDEV(CommentWrite\n    // commentLists={commentLists}\n    // setCommentLists={setCommentLists}\n    // commentList={commentList}\n    // setCommentList={setCommentList}\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Commentview\n    // commentLists={commentLists}\n    // setCommentLists={setCommentLists}\n    // commentList={commentList}\n    // setCommentList={setCommentList}\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Comment;\nexport default Comment;\nconst StyleCommentWrap = styled.div`\n  width: calc(100% - 24px);\n  margin: 16px auto;\n  border-top: 1px solid #e6e6e6;\n  border-bottom: 1px solid #e6e6e6;\n`;\n_c2 = StyleCommentWrap;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"StyleCommentWrap\");","map":{"version":3,"names":["React","useState","useEffect","styled","Commentview","CommentWrite","useDispatch","useSelector","__getComment","Comment","console","log","commentLists","StyleCommentWrap","div"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/Comment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Commentview from './Commentview';\nimport CommentWrite from './CommentWrite';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getComment } from '../../modules/commentSlice';\n\nfunction Comment() {\n\n\n  console.log(commentLists);\n\n  // let today = new Date();\n  // const [commentList, setCommentList] = useState({\n  //   // id: ,\n  //   comment: '',\n  //   userId: '',\n  //   userPw: '',\n  //   date: today.toLocaleDateString(),\n  // });\n\n  return (\n    <StyleCommentWrap>\n      <CommentWrite\n      // commentLists={commentLists}\n      // setCommentLists={setCommentLists}\n      // commentList={commentList}\n      // setCommentList={setCommentList}\n      />\n      <Commentview\n      // commentLists={commentLists}\n      // setCommentLists={setCommentLists}\n      // commentList={commentList}\n      // setCommentList={setCommentList}\n      />\n    </StyleCommentWrap>\n  );\n}\n\nexport default Comment;\n\nconst StyleCommentWrap = styled.div`\n  width: calc(100% - 24px);\n  margin: 16px auto;\n  border-top: 1px solid #e6e6e6;\n  border-bottom: 1px solid #e6e6e6;\n`;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,4BAA4B;AAAC;AAE1D,SAASC,OAAO,GAAG;EAGjBC,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;;EAEzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,gBAAgB;IAAA,wBACf,QAAC;IACD;IACA;IACA;IACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACF,QAAC;IACD;IACA;IACA;IACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACe;AAEvB;AAAC,KA9BQH,OAAO;AAgChB,eAAeA,OAAO;AAEtB,MAAMI,gBAAgB,GAAGV,MAAM,CAACW,GAAI;AACpC;AACA;AACA;AACA;AACA,CAAC;AAAC,MALID,gBAAgB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}