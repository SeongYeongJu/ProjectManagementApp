{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/CmWrite.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CmWrite() {\n  _s();\n  const [commentWrite, setCommentWrite] = useState('');\n  const commentOnchange = () => {\n    setCommentWritecommentWrite;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: commentWrite,\n        onChange: commentOnchange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CmWrite, \"1SOjijac4vfZWeS4K0Kt0ebjNKM=\");\n_c = CmWrite;\nexport default CmWrite;\nvar _c;\n$RefreshReg$(_c, \"CmWrite\");","map":{"version":3,"names":["React","useState","CmWrite","commentWrite","setCommentWrite","commentOnchange","setCommentWritecommentWrite"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/CmWrite.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction CmWrite() {\n  const [commentWrite, setCommentWrite] = useState('');\n\n  const commentOnchange = () => {\n    setCommentWritecommentWrite\n  };\n\n  return (\n    <>\n      <form>\n        <input value={commentWrite} onChange={commentOnchange} />\n      </form>\n    </>\n  );\n}\n\nexport default CmWrite;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMI,eAAe,GAAG,MAAM;IAC5BC,2BAA2B;EAC7B,CAAC;EAED,oBACE;IAAA,uBACE;MAAA,uBACE;QAAO,KAAK,EAAEH,YAAa;QAAC,QAAQ,EAAEE;MAAgB;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACpD,iBACN;AAEP;AAAC,GAdQH,OAAO;AAAA,KAAPA,OAAO;AAgBhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}