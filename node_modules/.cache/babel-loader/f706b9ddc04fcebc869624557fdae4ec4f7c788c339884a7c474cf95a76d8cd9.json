{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/Comment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Commentview from './Commentview';\nimport CommentWrite from './CommentWrite';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getComment } from '../../modules/commentSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    error,\n    todos\n  } = useSelector(state => state.commentList);\n  console.log(commentList);\n  let today = new Date();\n  const [commentList, setCommentList] = useState({\n    // id: ,\n    comment: '',\n    userId: '',\n    userPw: '',\n    date: today.toLocaleDateString()\n  });\n  useEffect(() => {\n    dispatch(__getComment);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(StyleCommentWrap, {\n    children: [/*#__PURE__*/_jsxDEV(CommentWrite\n    // commentLists={commentLists}\n    // setCommentLists={setCommentLists}\n    , {\n      commentList: commentList,\n      setCommentList: setCommentList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Commentview\n    // commentLists={commentLists}\n    // setCommentLists={setCommentLists}\n    , {\n      commentList: commentList,\n      setCommentList: setCommentList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"Cl3ArEF7g255glLf4ayP/7sMrDc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Comment;\nexport default Comment;\nconst StyleCommentWrap = styled.div`\n  width: calc(100% - 24px);\n  margin: 16px auto;\n  border-top: 1px solid #e6e6e6;\n  border-bottom: 1px solid #e6e6e6;\n`;\n_c2 = StyleCommentWrap;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"StyleCommentWrap\");","map":{"version":3,"names":["React","useState","useEffect","styled","Commentview","CommentWrite","axios","useDispatch","useSelector","__getComment","Comment","dispatch","isLoading","error","todos","state","commentList","console","log","today","Date","setCommentList","comment","userId","userPw","date","toLocaleDateString","StyleCommentWrap","div"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/Comment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Commentview from './Commentview';\nimport CommentWrite from './CommentWrite';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getComment } from '../../modules/commentSlice';\n\nfunction Comment() {\n  const dispatch = useDispatch();\n  const { isLoading, error, todos } = useSelector((state) => state.commentList);\n  \n  console.log(commentList);\n\n  let today = new Date();\n  const [commentList, setCommentList] = useState({\n    // id: ,\n    comment: '',\n    userId: '',\n    userPw: '',\n    date: today.toLocaleDateString(),\n  });\n\n  useEffect(() => {\n    dispatch(__getComment);\n  }, [dispatch]);\n\n  return (\n    <StyleCommentWrap>\n      <CommentWrite\n        // commentLists={commentLists}\n        // setCommentLists={setCommentLists}\n        commentList={commentList}\n        setCommentList={setCommentList}\n      />\n      <Commentview\n        // commentLists={commentLists}\n        // setCommentLists={setCommentLists}\n        commentList={commentList}\n        setCommentList={setCommentList}\n      />\n    </StyleCommentWrap>\n  );\n}\n\nexport default Comment;\n\nconst StyleCommentWrap = styled.div`\n  width: calc(100% - 24px);\n  margin: 16px auto;\n  border-top: 1px solid #e6e6e6;\n  border-bottom: 1px solid #e6e6e6;\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,4BAA4B;AAAC;AAE1D,SAASC,OAAO,GAAG;EAAA;EACjB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAM;IAAEK,SAAS;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;EAE7EC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;EAExB,IAAIG,KAAK,GAAG,IAAIC,IAAI,EAAE;EACtB,MAAM,CAACJ,WAAW,EAAEK,cAAc,CAAC,GAAGpB,QAAQ,CAAC;IAC7C;IACAqB,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAEN,KAAK,CAACO,kBAAkB;EAChC,CAAC,CAAC;EAEFxB,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACF,YAAY,CAAC;EACxB,CAAC,EAAE,CAACE,QAAQ,CAAC,CAAC;EAEd,oBACE,QAAC,gBAAgB;IAAA,wBACf,QAAC;IACC;IACA;IAAA;MACA,WAAW,EAAEK,WAAY;MACzB,cAAc,EAAEK;IAAe;MAAA;MAAA;MAAA;IAAA,QAC/B,eACF,QAAC;IACC;IACA;IAAA;MACA,WAAW,EAAEL,WAAY;MACzB,cAAc,EAAEK;IAAe;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACe;AAEvB;AAAC,GAnCQX,OAAO;EAAA,QACGH,WAAW,EACQC,WAAW;AAAA;AAAA,KAFxCE,OAAO;AAqChB,eAAeA,OAAO;AAEtB,MAAMiB,gBAAgB,GAAGxB,MAAM,CAACyB,GAAI;AACpC;AACA;AACA;AACA;AACA,CAAC;AAAC,MALID,gBAAgB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}