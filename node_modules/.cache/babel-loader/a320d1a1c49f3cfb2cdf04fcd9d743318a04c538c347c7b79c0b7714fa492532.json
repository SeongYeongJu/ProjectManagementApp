{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/CommentView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport CommentList from './CommentList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getComment } from '../../modules/commentSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommmentView(_ref) {\n  _s();\n  let {\n    commentId\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    error,\n    commentLists\n  } = useSelector(state => state.commentList);\n  useEffect(() => {\n    dispatch(__getComment());\n  }, [dispatch]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529\\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  const idValue = comm;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentLists.map(item => {\n      // return <CommentList item={item} key={item?.id} />;\n      if (commentId === item.todoid) {\n        return /*#__PURE__*/_jsxDEV(CommentList, {\n          item: item\n        }, item === null || item === void 0 ? void 0 : item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 18\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CommmentView, \"jb/E3rmmBGnlH5NcBm4y0S1IjLI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CommmentView;\nexport default CommmentView;\nvar _c;\n$RefreshReg$(_c, \"CommmentView\");","map":{"version":3,"names":["React","useEffect","CommentList","useDispatch","useSelector","__getComment","CommmentView","commentId","dispatch","isLoading","error","commentLists","state","commentList","message","idValue","comm","map","item","todoid","id"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/CommentView.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport CommentList from './CommentList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getComment } from '../../modules/commentSlice';\n\nfunction CommmentView({ commentId }) {\n  const dispatch = useDispatch();\n\n  const { isLoading, error, commentLists } = useSelector(\n    (state) => state.commentList\n  );\n\n  useEffect(() => {\n    dispatch(__getComment());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <div>로딩중...</div>;\n  }\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n\n  const idValue = comm\n\n  return (\n    <div>\n      {commentLists.map((item) => {\n        // return <CommentList item={item} key={item?.id} />;\n        if (commentId === item.todoid) {\n          return <CommentList item={item} key={item?.id} />;\n        }\n      })}\n    </div>\n  );\n}\n\nexport default CommmentView;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,4BAA4B;AAAC;AAE1D,SAASC,YAAY,OAAgB;EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC;EACjC,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAE9B,MAAM;IAAEM,SAAS;IAAEC,KAAK;IAAEC;EAAa,CAAC,GAAGP,WAAW,CACnDQ,KAAK,IAAKA,KAAK,CAACC,WAAW,CAC7B;EAEDZ,SAAS,CAAC,MAAM;IACdO,QAAQ,CAACH,YAAY,EAAE,CAAC;EAC1B,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC;EAEd,IAAIC,SAAS,EAAE;IACb,oBAAO;MAAA,UAAK;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM;EAC1B;EAEA,IAAIC,KAAK,EAAE;IACT,oBAAO;MAAA,UAAMA,KAAK,CAACI;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO;EACnC;EAEA,MAAMC,OAAO,GAAGC,IAAI;EAEpB,oBACE;IAAA,UACGL,YAAY,CAACM,GAAG,CAAEC,IAAI,IAAK;MAC1B;MACA,IAAIX,SAAS,KAAKW,IAAI,CAACC,MAAM,EAAE;QAC7B,oBAAO,QAAC,WAAW;UAAC,IAAI,EAAED;QAAK,GAAMA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,EAAE;UAAA;UAAA;UAAA;QAAA,QAAI;MACnD;IACF,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA/BQd,YAAY;EAAA,QACFH,WAAW,EAEeC,WAAW;AAAA;AAAA,KAH/CE,YAAY;AAiCrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}