{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/TodoList/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getTodos, __postTodos } from '../../modules/todosSlice';\nimport Todo from './Todo';\nimport Button from '../redux/components/button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  _s();\n  let {\n    setModalSwitch,\n    openModalAddScheduleButton,\n    modalSwitch\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    error,\n    todos\n  } = useSelector(state => state.allTodos);\n  useEffect(() => {\n    dispatch(__getTodos());\n  }, [dispatch]);\n  console.log(isLoading, error);\n\n  //. todos의 데이터가 없으면 사용자 편의를 위해 아래 메시지를 띄운다.\n  if (isLoading === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB85C\\uB529\\uC911 \\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824 \\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n  if (todos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"TodoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD45C\\uC2DC\\uD560 \\uBAA9\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      ClickHandler: openModalAddScheduleButton,\n      radius: \"4\",\n      children: \"+ \\uC77C\\uC815\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), todos.map(item => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"+F6PuwcQ+p+0tUnP34CEIqpTtvA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","__getTodos","__postTodos","Todo","Button","TodoList","setModalSwitch","openModalAddScheduleButton","modalSwitch","dispatch","isLoading","error","todos","state","allTodos","console","log","length","map","item"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/TodoList/TodoList.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getTodos, __postTodos } from '../../modules/todosSlice';\nimport Todo from './Todo';\nimport Button from '../redux/components/button/Button';\n\nconst TodoList = ({\n  setModalSwitch,\n  openModalAddScheduleButton,\n  modalSwitch,\n}) => {\n  const dispatch = useDispatch();\n  const { isLoading, error, todos } = useSelector((state) => state.allTodos);\n\n  useEffect(() => {\n    dispatch(__getTodos());\n  }, [dispatch]);\n\n  console.log(isLoading, error);\n\n  //. todos의 데이터가 없으면 사용자 편의를 위해 아래 메시지를 띄운다.\n  if (isLoading === 0) {\n    return (\n      <div>\n        <h3>로딩중 입니다...</h3>\n        <p>잠시만 기다려 주세요.</p>\n      </div>\n    );\n  }\n  if (todos.length === 0) {\n    return (\n      <div>\n        <h3>TodoList</h3>\n        <p>표시할 목록이 없습니다.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h3>TodoList</h3>\n      <Button ClickHandler={openModalAddScheduleButton} radius=\"4\">\n        + 일정추가\n      </Button>\n      {todos.map((item) => {\n        return <Todo item={item} />;\n      })}\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,WAAW,QAAQ,0BAA0B;AAClE,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,mCAAmC;AAAC;AAEvD,MAAMC,QAAQ,GAAG,QAIX;EAAA;EAAA,IAJY;IAChBC,cAAc;IACdC,0BAA0B;IAC1BC;EACF,CAAC;EACC,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAM;IAAEW,SAAS;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAE1EhB,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACR,UAAU,EAAE,CAAC;EACxB,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;EAEdM,OAAO,CAACC,GAAG,CAACN,SAAS,EAAEC,KAAK,CAAC;;EAE7B;EACA,IAAID,SAAS,KAAK,CAAC,EAAE;IACnB,oBACE;MAAA,wBACE;QAAA,UAAI;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK,eACnB;QAAA,UAAG;MAAY;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACf;EAEV;EACA,IAAIE,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;IACtB,oBACE;MAAA,wBACE;QAAA,UAAI;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eACjB;QAAA,UAAG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB;EAEV;EAEA,oBACE;IAAA,wBACE;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB,QAAC,MAAM;MAAC,YAAY,EAAEV,0BAA2B;MAAC,MAAM,EAAC,GAAG;MAAA,UAAC;IAE7D;MAAA;MAAA;MAAA;IAAA,QAAS,EACRK,KAAK,CAACM,GAAG,CAAEC,IAAI,IAAK;MACnB,oBAAO,QAAC,IAAI;QAAC,IAAI,EAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAC7B,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA3CId,QAAQ;EAAA,QAKKN,WAAW,EACQC,WAAW;AAAA;AAAA,KAN3CK,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}