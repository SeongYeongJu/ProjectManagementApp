{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/TodoList/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getTodos, __postTodos } from '../../modules/todosSlice';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // post요청이 끝나면 isAdded 값이 변경되고 __getTodos()가 실행된다.\n    // 그러면 AddScheduleInput 컴포넌트에서 새로운 todo를 입력 시 todo 화면이 리렌더링 되고 새로운 todo가 바로 보인다.\n    dispatch(__getTodos());\n  }, [dispatch]);\n\n  //. todos의 데이터가 없으면 사용자 편의를 위해 아래 메시지를 띄운다.\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB85C\\uB529\\uC911 \\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824 \\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n  if (todos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"TodoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD45C\\uC2DC\\uD560 \\uBAA9\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todos.map(item => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","__getTodos","__postTodos","Todo","TodoList","dispatch","isLoading","todos","length","error","message","map","item"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/TodoList/TodoList.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getTodos, __postTodos } from '../../modules/todosSlice';\nimport Todo from './Todo';\n\nconst TodoList = () => {\n  const dispatch = useDispatch();\n \n\n  useEffect(() => {\n    // post요청이 끝나면 isAdded 값이 변경되고 __getTodos()가 실행된다.\n    // 그러면 AddScheduleInput 컴포넌트에서 새로운 todo를 입력 시 todo 화면이 리렌더링 되고 새로운 todo가 바로 보인다.\n    dispatch(__getTodos());\n  }, [dispatch]);\n\n  //. todos의 데이터가 없으면 사용자 편의를 위해 아래 메시지를 띄운다.\n  if (isLoading) {\n    return (\n      <div>\n        <h3>로딩중 입니다...</h3>\n        <p>잠시만 기다려 주세요.</p>\n      </div>\n    );\n  }\n  if (todos.length === 0) {\n    return (\n      <div>\n        <h3>TodoList</h3>\n        <p>표시할 목록이 없습니다.</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n  return (\n    <div>\n      {todos.map((item) => {\n        return <Todo item={item} />;\n      })}\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,WAAW,QAAQ,0BAA0B;AAClE,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAG9BD,SAAS,CAAC,MAAM;IACd;IACA;IACAO,QAAQ,CAACJ,UAAU,EAAE,CAAC;EACxB,CAAC,EAAE,CAACI,QAAQ,CAAC,CAAC;;EAEd;EACA,IAAIC,SAAS,EAAE;IACb,oBACE;MAAA,wBACE;QAAA,UAAI;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK,eACnB;QAAA,UAAG;MAAY;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACf;EAEV;EACA,IAAIC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACtB,oBACE;MAAA,wBACE;QAAA,UAAI;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eACjB;QAAA,UAAG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB;EAEV;EAEA,IAAIC,KAAK,EAAE;IACT,oBAAO;MAAA,UAAMA,KAAK,CAACC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO;EACnC;EACA,oBACE;IAAA,UACGH,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;MACnB,oBAAO,QAAC,IAAI;QAAC,IAAI,EAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAC7B,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAtCIR,QAAQ;EAAA,QACKL,WAAW;AAAA;AAAA,KADxBK,QAAQ;AAwCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}