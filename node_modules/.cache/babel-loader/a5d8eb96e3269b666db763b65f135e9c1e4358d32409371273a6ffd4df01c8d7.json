{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/TodoList/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getTodos, __postTodos } from '../../modules/todosSlice';\nimport Todo from './Todo';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  _s();\n  let {\n    title\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    error,\n    todos\n  } = useSelector(state => state.allTodos);\n  useEffect(() => {\n    // post요청이 끝나면 isAdded 값이 변경되고 __getTodos()가 실행된다.\n    // 그러면 AddScheduleInput 컴포넌트에서 새로운 todo를 입력 시 todo 화면이 리렌더링 되고 새로운 todo가 바로 보인다.\n    dispatch(__getTodos());\n  }, [dispatch]);\n\n  //. todos의 데이터가 없으면 사용자 편의를 위해 아래 메시지를 띄운다.\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB85C\\uB529\\uC911 \\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824 \\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n  if (todos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"TodoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD45C\\uC2DC\\uD560 \\uBAA9\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyleFlex, {\n    children: [title, todos.map(item => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: item.schedule === title && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Todo, {\n            item: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"+F6PuwcQ+p+0tUnP34CEIqpTtvA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoList;\nexport default TodoList;\nconst StyleFlex = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  width: 800px;\n\n  @media (max-width: 800px) {\n    flex: none;\n    width: 100%;\n    background-color: red;\n  }\n`;\n_c2 = StyleFlex;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoList\");\n$RefreshReg$(_c2, \"StyleFlex\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","__getTodos","__postTodos","Todo","styled","TodoList","title","dispatch","isLoading","error","todos","state","allTodos","length","message","map","item","schedule","StyleFlex","div"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/TodoList/TodoList.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { __getTodos, __postTodos } from '../../modules/todosSlice';\nimport Todo from './Todo';\nimport styled from 'styled-components';\n\nconst TodoList = ({ title }) => {\n  const dispatch = useDispatch();\n  const { isLoading, error, todos } = useSelector((state) => state.allTodos);\n\n  useEffect(() => {\n    // post요청이 끝나면 isAdded 값이 변경되고 __getTodos()가 실행된다.\n    // 그러면 AddScheduleInput 컴포넌트에서 새로운 todo를 입력 시 todo 화면이 리렌더링 되고 새로운 todo가 바로 보인다.\n    dispatch(__getTodos());\n  }, [dispatch]);\n\n  //. todos의 데이터가 없으면 사용자 편의를 위해 아래 메시지를 띄운다.\n  if (isLoading) {\n    return (\n      <div>\n        <h3>로딩중 입니다...</h3>\n        <p>잠시만 기다려 주세요.</p>\n      </div>\n    );\n  }\n  if (todos.length === 0) {\n    return (\n      <div>\n        <h3>TodoList</h3>\n        <p>표시할 목록이 없습니다.</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n\n  return (\n    <StyleFlex>\n      {title}\n      {todos.map((item) => {\n        return (\n          <>\n            {item.schedule === title && (\n              <>\n                <Todo item={item} />\n              </>\n            )}\n          </>\n        );\n      })}\n    </StyleFlex>\n  );\n};\n\nexport default TodoList;\n\nconst StyleFlex = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  width: 800px;\n\n  @media (max-width: 800px) {\n    flex: none;\n    width: 100%;\n    background-color: red;\n  }\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,WAAW,QAAQ,0BAA0B;AAClE,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAAA;AAEvC,MAAMC,QAAQ,GAAG,QAAe;EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC;EACzB,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM;IAAES,SAAS;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAE1Ed,SAAS,CAAC,MAAM;IACd;IACA;IACAS,QAAQ,CAACN,UAAU,EAAE,CAAC;EACxB,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;;EAEd;EACA,IAAIC,SAAS,EAAE;IACb,oBACE;MAAA,wBACE;QAAA,UAAI;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK,eACnB;QAAA,UAAG;MAAY;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACf;EAEV;EACA,IAAIE,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IACtB,oBACE;MAAA,wBACE;QAAA,UAAI;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eACjB;QAAA,UAAG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB;EAEV;EAEA,IAAIJ,KAAK,EAAE;IACT,oBAAO;MAAA,UAAMA,KAAK,CAACK;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO;EACnC;EAEA,oBACE,QAAC,SAAS;IAAA,WACPR,KAAK,EACLI,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAK;MACnB,oBACE;QAAA,UACGA,IAAI,CAACC,QAAQ,KAAKX,KAAK,iBACtB;UAAA,uBACE,QAAC,IAAI;YAAC,IAAI,EAAEU;UAAK;YAAA;YAAA;YAAA;UAAA;QAAG;MAEvB,iBACA;IAEP,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACQ;AAEhB,CAAC;AAAC,GAhDIX,QAAQ;EAAA,QACKN,WAAW,EACQC,WAAW;AAAA;AAAA,KAF3CK,QAAQ;AAkDd,eAAeA,QAAQ;AAEvB,MAAMa,SAAS,GAAGd,MAAM,CAACe,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAZID,SAAS;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}