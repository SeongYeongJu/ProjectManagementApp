{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/DetailPage/DetailMain.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { ko } from 'date-fns/esm/locale';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { __getTodos } from '../../modules/todosSlice';\nimport Comment from '../comments/Comment';\nimport TodoDetail from './TodoDetail';\n// import {v4 as uuidv4} from 'uuid';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DetailMain() {\n  _s();\n  const dispatch = useDispatch();\n\n  // 생성일시\n  const [startDate, setStartDate] = useState(new Date());\n\n  // 마감일시\n  const [completionDate, setCompletionDate] = useState(new Date());\n\n  // 내용\n  const [text, setText] = useState('');\n  const textInput = event => {\n    setText(event.target.value);\n  };\n\n  // useNavigate로 전달한 props(todo의 id)\n  const location = useLocation();\n  const todoId = location.pathname.split('/')[1];\n\n  // 상세페이지 제목을 받아오려면 todos를 들고와서 map을 돌리자.\n  const {\n    todos\n  } = useSelector(state => state.allTodos);\n  const params = useParams();\n  useEffect({}, []);\n  const idValue = todos.filter(item => todoId === item.id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: idValue.map(item => {\n        return /*#__PURE__*/_jsxDEV(TodoDetail, {\n          item: item,\n          todoId: todoId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true)\n\n  // <div>\n  //   {/* 제목 */}\n  //   <TitleBox>\n  //     {/* {todos.map((item) => {\n  //       if (item.id === todoId) {\n  //         return item.title;\n  //       }\n  //     })} */}\n  //   </TitleBox>\n\n  //   <InformationBox>\n  //     {/* 담당자 */}\n  //     <Information>\n  //       담당자{' '}\n  //       {/* {todos.map((item) => {\n  //         if (item.id === todoId) {\n  //           return item.userName;\n  //         }\n  //       })} */}\n  //       <input />\n  //     </Information>\n\n  //     {/* 진행상태 */}\n  //     <Information>\n  //       진행 상태{' '}\n  //       <StyledInput>\n  //         <input />\n  //       </StyledInput>\n  //     </Information>\n\n  //     {/* 생성일시 */}\n  //     <Information>\n  //       생성 일시{' '}\n  //       <DatePicker\n  //         selected={startDate}\n  //         onChange={(date) => setStartDate(date)}\n  //         locale={ko} // 한글로 변경\n  //         dateFormat=\"yyyy.MM.dd (eee)\" // 시간 포맷 변경\n  //         showPopperArrow={false} // 화살표 변경\n  //         minDate={new Date()} // 오늘 날짜 전은 선택 못하게\n  //       />\n  //     </Information>\n\n  //     {/* 마감일시 */}\n  //     <Information>\n  //       마감 일시{' '}\n  //       <DatePicker\n  //         selected={completionDate}\n  //         onChange={(date) => setCompletionDate(date)}\n  //         locale={ko} // 한글로 변경\n  //         dateFormat=\"yyyy.MM.dd (eee)\" // 시간 포맷 변경\n  //         showPopperArrow={false} // 화살표 변경\n  //         minDate={new Date()} // 오늘 날짜 전은 선택 못하게\n  //       />\n  //     </Information>\n  //   </InformationBox>\n\n  //   {/* 내용 */}\n  //   <form>\n  //     <textarea value={text} onChange={textInput}></textarea>\n  //     <button>추가하기</button>\n  //   </form>\n\n  //   <div>{text}</div>\n\n  //\n  // </div>\n  ;\n}\n_s(DetailMain, \"KSlIbc5HHzKeHpiUuOcjJZ2JWy8=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useParams];\n});\n_c = DetailMain;\nexport default DetailMain;\n\n//CSS\n\nconst TitleBox = styled.div`\n  margin-left: 150px;\n  font-size: 50px;\n  margin-top: 150px;\n`;\nconst InformationBox = styled.div`\n  margin-top: 50px;\n`;\nconst Information = styled.div`\n  display: flex;\n  justify-content: left;\n  justify-items: center;\n  margin-left: 150px;\n`;\nconst StyledInput = styled.div`\n  margin-left: 50px;\n  display: flex;\n  justify-content: space-between;\n`;\nvar _c;\n$RefreshReg$(_c, \"DetailMain\");","map":{"version":3,"names":["React","useEffect","styled","useState","DatePicker","ko","useLocation","useParams","useSelector","useDispatch","__getTodos","Comment","TodoDetail","DetailMain","dispatch","startDate","setStartDate","Date","completionDate","setCompletionDate","text","setText","textInput","event","target","value","location","todoId","pathname","split","todos","state","allTodos","params","idValue","filter","item","id","map","TitleBox","div","InformationBox","Information","StyledInput"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/DetailPage/DetailMain.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { ko } from 'date-fns/esm/locale';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { __getTodos } from '../../modules/todosSlice';\nimport Comment from '../comments/Comment';\nimport TodoDetail from './TodoDetail';\n// import {v4 as uuidv4} from 'uuid';\n\nfunction DetailMain() {\n  const dispatch = useDispatch();\n\n  // 생성일시\n  const [startDate, setStartDate] = useState(new Date());\n\n  // 마감일시\n  const [completionDate, setCompletionDate] = useState(new Date());\n\n  // 내용\n  const [text, setText] = useState('');\n  const textInput = (event) => {\n    setText(event.target.value);\n  };\n\n  // useNavigate로 전달한 props(todo의 id)\n  const location = useLocation();\n  const todoId = location.pathname.split('/')[1];\n\n  // 상세페이지 제목을 받아오려면 todos를 들고와서 map을 돌리자.\n  const { todos } = useSelector((state) => state.allTodos);\n  const params = useParams();\n\n  useEffect({\n    \n  },[])\n  const idValue = todos.filter((item) => todoId === item.id);\n  return (\n    <>\n      <div>\n        {idValue.map((item) => {\n          return <TodoDetail item={item} todoId={todoId} />;\n        })}\n      </div>\n      <Comment />\n    </>\n\n    // <div>\n    //   {/* 제목 */}\n    //   <TitleBox>\n    //     {/* {todos.map((item) => {\n    //       if (item.id === todoId) {\n    //         return item.title;\n    //       }\n    //     })} */}\n    //   </TitleBox>\n\n    //   <InformationBox>\n    //     {/* 담당자 */}\n    //     <Information>\n    //       담당자{' '}\n    //       {/* {todos.map((item) => {\n    //         if (item.id === todoId) {\n    //           return item.userName;\n    //         }\n    //       })} */}\n    //       <input />\n    //     </Information>\n\n    //     {/* 진행상태 */}\n    //     <Information>\n    //       진행 상태{' '}\n    //       <StyledInput>\n    //         <input />\n    //       </StyledInput>\n    //     </Information>\n\n    //     {/* 생성일시 */}\n    //     <Information>\n    //       생성 일시{' '}\n    //       <DatePicker\n    //         selected={startDate}\n    //         onChange={(date) => setStartDate(date)}\n    //         locale={ko} // 한글로 변경\n    //         dateFormat=\"yyyy.MM.dd (eee)\" // 시간 포맷 변경\n    //         showPopperArrow={false} // 화살표 변경\n    //         minDate={new Date()} // 오늘 날짜 전은 선택 못하게\n    //       />\n    //     </Information>\n\n    //     {/* 마감일시 */}\n    //     <Information>\n    //       마감 일시{' '}\n    //       <DatePicker\n    //         selected={completionDate}\n    //         onChange={(date) => setCompletionDate(date)}\n    //         locale={ko} // 한글로 변경\n    //         dateFormat=\"yyyy.MM.dd (eee)\" // 시간 포맷 변경\n    //         showPopperArrow={false} // 화살표 변경\n    //         minDate={new Date()} // 오늘 날짜 전은 선택 못하게\n    //       />\n    //     </Information>\n    //   </InformationBox>\n\n    //   {/* 내용 */}\n    //   <form>\n    //     <textarea value={text} onChange={textInput}></textarea>\n    //     <button>추가하기</button>\n    //   </form>\n\n    //   <div>{text}</div>\n\n    //\n    // </div>\n  );\n}\n\nexport default DetailMain;\n\n//CSS\n\nconst TitleBox = styled.div`\n  margin-left: 150px;\n  font-size: 50px;\n  margin-top: 150px;\n`;\n\nconst InformationBox = styled.div`\n  margin-top: 50px;\n`;\n\nconst Information = styled.div`\n  display: flex;\n  justify-content: left;\n  justify-items: center;\n  margin-left: 150px;\n`;\n\nconst StyledInput = styled.div`\n  margin-left: 50px;\n  display: flex;\n  justify-content: space-between;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}