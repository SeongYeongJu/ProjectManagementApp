{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/CmWrite.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Button from '../button/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CmWrite() {\n  _s();\n  let today = new Date();\n  const [commentList, setCommentList] = useState({\n    id: '',\n    comment: '',\n    userId: '',\n    userPw: '',\n    date: today.toLocaleDateString()\n  });\n  const [inputTxt, setInpuTxt] = useState({\n    commentTxt: '',\n    userIdTxt: '',\n    userPwTxt: ''\n  });\n  const {\n    comment,\n    userId,\n    userPw\n  } = commentList;\n  const {\n    commentTxt,\n    userIdTxt,\n    userPwTxt\n  } = inputTxt;\n\n  //test\n  const fetchTodos = async () => {\n    const {\n      data\n    } = await axios.get('http://localhost:3001/comment');\n    setCommentList(data);\n  };\n  const commentOnSubmit = async commentList => {\n    await axios.post('http://localhost:3001/comment', commentList);\n    setCommentList([...commentList, commentList]);\n  };\n  console.log(commentList);\n  useEffect(() => {\n    fetchTodos(); //3. 새로고침해서 여기를 다시 실행해줘야 서버값이 새로 들어옴 e.g) [{투두가},{두개임}]\n  }, []);\n\n  //댓글 추가버튼\n  // const commentOnSubmit = (e) => {\n  //   e.preventDefault();\n  //   //현재시간 객체로 받음.\n  //   let today = new Date();\n\n  //   //form 유효검사\n  //   if (!comment || !userId || !userPw) {\n  //     setInpuTxt({\n  //       ...inputTxt,\n  //       commentTxt: '댓글 을 입력해주세요.',\n  //       userIdTxt: '이름 을 입력해주세요.',\n  //       userPwTxt: '비밀번호 를 입력해주세요.',\n  //     });\n  //     return;\n  //   }\n\n  //   const newComment = {\n  //     id: uuidv4(),\n  //     comment,\n  //     userId,\n  //     userPw,\n  //     date: today.toLocaleDateString(),\n  //   };\n  //   dispatch(addComment(newComment));\n\n  //   setComment('');\n  //   setUserId('');\n  //   setUserPw('');\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyleForm, {\n      onSubmit: e => {\n        e.prevetDefault();\n        commentOnSubmit();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          maxLength: \"40\",\n          type: \"text\",\n          value: comment,\n          onChange: e => {\n            const {\n              value\n            } = e.target;\n            setCommentList({\n              ...commentList,\n              comment: value\n            });\n          },\n          placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyleInputErro, {\n          children: comment ? '' : commentTxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyleFlex, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-infor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              maxLength: \"5\",\n              type: \"text\",\n              value: userId,\n              onChange: e => {\n                const {\n                  value\n                } = e.target;\n                setCommentList({\n                  ...commentList,\n                  userId: value\n                });\n              },\n              placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyleInputErro, {\n              children: userId ? '' : userIdTxt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              maxLength: \"10\",\n              type: \"text\",\n              value: userPw,\n              onChange: e => {\n                const {\n                  value\n                } = e.target;\n                setCommentList({\n                  ...commentList,\n                  userPw: value\n                });\n              },\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825 \\uD574 \\uC8FC\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyleInputErro, {\n              children: userPw ? '' : userPwTxt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        backgroundColor: \"#0a0a0a\",\n        radius: \"100\",\n        children: \"\\uB313\\uAE00\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CmWrite, \"j1hyZM/gLCE83kUIfiHsEgtHkcM=\");\n_c = CmWrite;\nexport default CmWrite;\nconst StyleForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 16px 24px;\n\n  .comment-wrap {\n    flex: 1;\n\n    > input {\n      width: 100%;\n      height: 34px;\n      border: none;\n      padding: 0 8px;\n      border-bottom: 1px solid #e6e6e6;\n\n      :focus {\n        outline: none;\n      }\n    }\n  }\n`;\n_c2 = StyleForm;\nconst StyleFlex = styled.div`\n  display: flex;\n  flex: 1.5;\n  justify-content: flex-end;\n\n  .user-infor {\n    display: flex;\n\n    > div {\n      > input {\n        height: 34px;\n        padding: 0 8px;\n        margin-right: 8px;\n        border: none;\n        border-bottom: 1px solid #e6e6e6;\n\n        :focus {\n          outline: none;\n        }\n      }\n    }\n  }\n`;\n_c3 = StyleFlex;\nconst StyleInputErro = styled.p`\n  color: red;\n  font-size: 13px;\n  margin-top: 4px;\n`;\n_c4 = StyleInputErro;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CmWrite\");\n$RefreshReg$(_c2, \"StyleForm\");\n$RefreshReg$(_c3, \"StyleFlex\");\n$RefreshReg$(_c4, \"StyleInputErro\");","map":{"version":3,"names":["React","useState","useEffect","styled","Button","axios","CmWrite","today","Date","commentList","setCommentList","id","comment","userId","userPw","date","toLocaleDateString","inputTxt","setInpuTxt","commentTxt","userIdTxt","userPwTxt","fetchTodos","data","get","commentOnSubmit","post","console","log","e","prevetDefault","value","target","StyleForm","form","StyleFlex","div","StyleInputErro","p"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/CmWrite.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Button from '../button/Button';\nimport axios from 'axios';\n\nfunction CmWrite() {\n  let today = new Date();\n  const [commentList, setCommentList] = useState({\n    id: '',\n    comment: '',\n    userId: '',\n    userPw: '',\n    date: today.toLocaleDateString(),\n  });\n\n  const [inputTxt, setInpuTxt] = useState({\n    commentTxt: '',\n    userIdTxt: '',\n    userPwTxt: '',\n  });\n\n  const { comment, userId, userPw } = commentList;\n  const { commentTxt, userIdTxt, userPwTxt } = inputTxt;\n\n  //test\n  const fetchTodos = async () => {\n    const { data } = await axios.get('http://localhost:3001/comment');\n    setCommentList(data);\n  };\n\n  const commentOnSubmit = async (commentList) => {\n    await axios.post('http://localhost:3001/comment', commentList);\n    setCommentList([...commentList, commentList]);\n  };\n\n  console.log(commentList);\n  useEffect(() => {\n    fetchTodos(); //3. 새로고침해서 여기를 다시 실행해줘야 서버값이 새로 들어옴 e.g) [{투두가},{두개임}]\n  }, []);\n\n  //댓글 추가버튼\n  // const commentOnSubmit = (e) => {\n  //   e.preventDefault();\n  //   //현재시간 객체로 받음.\n  //   let today = new Date();\n\n  //   //form 유효검사\n  //   if (!comment || !userId || !userPw) {\n  //     setInpuTxt({\n  //       ...inputTxt,\n  //       commentTxt: '댓글 을 입력해주세요.',\n  //       userIdTxt: '이름 을 입력해주세요.',\n  //       userPwTxt: '비밀번호 를 입력해주세요.',\n  //     });\n  //     return;\n  //   }\n\n  //   const newComment = {\n  //     id: uuidv4(),\n  //     comment,\n  //     userId,\n  //     userPw,\n  //     date: today.toLocaleDateString(),\n  //   };\n  //   dispatch(addComment(newComment));\n\n  //   setComment('');\n  //   setUserId('');\n  //   setUserPw('');\n  // };\n\n  return (\n    <>\n      <StyleForm\n        onSubmit={(e) => {\n          e.prevetDefault();\n          commentOnSubmit();\n        }}\n      >\n        <div className=\"comment-wrap\">\n          <input\n            maxLength=\"40\"\n            type=\"text\"\n            value={comment}\n            onChange={(e) => {\n              const { value } = e.target;\n              setCommentList({\n                ...commentList,\n                comment: value,\n              });\n            }}\n            placeholder=\"댓글을 입력해주세요.\"\n          />\n          {/* 코멘트 입력했을때  */}\n          <StyleInputErro>{comment ? '' : commentTxt}</StyleInputErro>\n        </div>\n\n        <StyleFlex>\n          <div className=\"user-infor\">\n            <div>\n              <input\n                maxLength=\"5\"\n                type=\"text\"\n                value={userId}\n                onChange={(e) => {\n                  const { value } = e.target;\n                  setCommentList({\n                    ...commentList,\n                    userId: value,\n                  });\n                }}\n                placeholder=\"이름을 입력해주세요\"\n              />\n              <StyleInputErro>{userId ? '' : userIdTxt}</StyleInputErro>\n            </div>\n\n            <div>\n              <input\n                maxLength=\"10\"\n                type=\"text\"\n                value={userPw}\n                onChange={(e) => {\n                  const { value } = e.target;\n                  setCommentList({\n                    ...commentList,\n                    userPw: value,\n                  });\n                }}\n                placeholder=\"비밀번호를 입력 해 주세요\"\n              />\n              <StyleInputErro>{userPw ? '' : userPwTxt}</StyleInputErro>\n            </div>\n          </div>\n        </StyleFlex>\n        <Button backgroundColor=\"#0a0a0a\" radius=\"100\">\n          댓글추가\n        </Button>\n      </StyleForm>\n    </>\n  );\n}\n\nexport default CmWrite;\n\nconst StyleForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 16px 24px;\n\n  .comment-wrap {\n    flex: 1;\n\n    > input {\n      width: 100%;\n      height: 34px;\n      border: none;\n      padding: 0 8px;\n      border-bottom: 1px solid #e6e6e6;\n\n      :focus {\n        outline: none;\n      }\n    }\n  }\n`;\n\nconst StyleFlex = styled.div`\n  display: flex;\n  flex: 1.5;\n  justify-content: flex-end;\n\n  .user-infor {\n    display: flex;\n\n    > div {\n      > input {\n        height: 34px;\n        padding: 0 8px;\n        margin-right: 8px;\n        border: none;\n        border-bottom: 1px solid #e6e6e6;\n\n        :focus {\n          outline: none;\n        }\n      }\n    }\n  }\n`;\n\nconst StyleInputErro = styled.p`\n  color: red;\n  font-size: 13px;\n  margin-top: 4px;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}