{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/TodoList/Todo.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from '../button/Button';\nimport { __deleteTodos } from '../../modules/todosSlice';\nimport { useDispatch } from 'react-redux';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = _ref => {\n  _s();\n  let {\n    item\n  } = _ref;\n  const dispatch = useDispatch();\n\n  //링크이동\n  const navigate = useNavigate();\n  const goToDetail = () => {\n    navigate(`/${item.id}`);\n  };\n\n  //일정삭제\n  const todoListDeleteButton = () => {\n    const deleteCommnet = window.prompt('삭제를 위해서 비밀번호를 입력 해 주세요.', '비밀번호를 입력해주세요.');\n\n    //비밀번호가 같을 때\n    if (deleteCommnet === item.userPw) {\n      window.confirm('정말 삭제하겠습니까?');\n      dispatch(__deleteTodos(item.id));\n    } else {\n      window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledTodoBox, {\n    children: item.schedule === title && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledTodo, {\n        onClick: goToDetail,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"user-name\",\n          children: item.userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date\",\n          children: item.startDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledButtonWrap, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          radius: \"100\",\n          backgroundColor: \"#484848\",\n          ClickHandler: todoListDeleteButton,\n          children: \"\\uC77C\\uC815\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Todo;\nexport default Todo;\nconst StyledTodoBox = styled.div`\n  border: 1px solid #e6e6e6;\n  border-radius: 8px;\n  padding: 1em;\n  cursor: pointer;\n`;\n_c2 = StyledTodoBox;\nconst StyledTodo = styled.div`\n  > .title {\n    font-size: 18px;\n    font-weight: 800;\n    margin-bottom: 1em;\n  }\n  .user-name {\n    padding: 0.5em 0;\n  }\n  .date {\n    font-size: 13px;\n  }\n`;\n_c3 = StyledTodo;\nconst StyledButtonWrap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n_c4 = StyledButtonWrap;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Todo\");\n$RefreshReg$(_c2, \"StyledTodoBox\");\n$RefreshReg$(_c3, \"StyledTodo\");\n$RefreshReg$(_c4, \"StyledButtonWrap\");","map":{"version":3,"names":["React","useNavigate","styled","Button","__deleteTodos","useDispatch","Todo","item","dispatch","navigate","goToDetail","id","todoListDeleteButton","deleteCommnet","window","prompt","userPw","confirm","schedule","title","userId","startDate","StyledTodoBox","div","StyledTodo","StyledButtonWrap"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/TodoList/Todo.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from '../button/Button';\nimport { __deleteTodos } from '../../modules/todosSlice';\nimport { useDispatch } from 'react-redux';\nconst Todo = ({ item }) => {\n  const dispatch = useDispatch();\n\n  //링크이동\n  const navigate = useNavigate();\n  const goToDetail = () => {\n    navigate(`/${item.id}`);\n  };\n\n  //일정삭제\n  const todoListDeleteButton = () => {\n    const deleteCommnet = window.prompt(\n      '삭제를 위해서 비밀번호를 입력 해 주세요.',\n      '비밀번호를 입력해주세요.'\n    );\n\n    //비밀번호가 같을 때\n    if (deleteCommnet === item.userPw) {\n      window.confirm('정말 삭제하겠습니까?');\n      dispatch(__deleteTodos(item.id));\n    } else {\n      window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n    }\n  };\n\n  return (\n    <StyledTodoBox>\n      {item.schedule === title && (\n        <>\n          <StyledTodo onClick={goToDetail}>\n            <h4 className=\"title\">{item.title}</h4>\n            <p className=\"user-name\">{item.userId}</p>\n            <p className=\"date\">{item.startDate}</p>\n          </StyledTodo>\n          <StyledButtonWrap>\n            <Button\n              radius=\"100\"\n              backgroundColor=\"#484848\"\n              ClickHandler={todoListDeleteButton}\n            >\n              일정삭제\n            </Button>\n          </StyledButtonWrap>\n        </>\n      )}\n    </StyledTodoBox>\n  );\n};\n\nexport default Todo;\n\nconst StyledTodoBox = styled.div`\n  border: 1px solid #e6e6e6;\n  border-radius: 8px;\n  padding: 1em;\n  cursor: pointer;\n`;\n\nconst StyledTodo = styled.div`\n  > .title {\n    font-size: 18px;\n    font-weight: 800;\n    margin-bottom: 1em;\n  }\n  .user-name {\n    padding: 0.5em 0;\n  }\n  .date {\n    font-size: 13px;\n  }\n`;\n\nconst StyledButtonWrap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,WAAW,QAAQ,aAAa;AAAC;AAAA;AAC1C,MAAMC,IAAI,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACpB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;;EAE9B;EACA,MAAMI,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,UAAU,GAAG,MAAM;IACvBD,QAAQ,CAAE,IAAGF,IAAI,CAACI,EAAG,EAAC,CAAC;EACzB,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAG,MAAM;IACjC,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CACjC,yBAAyB,EACzB,eAAe,CAChB;;IAED;IACA,IAAIF,aAAa,KAAKN,IAAI,CAACS,MAAM,EAAE;MACjCF,MAAM,CAACG,OAAO,CAAC,aAAa,CAAC;MAC7BT,QAAQ,CAACJ,aAAa,CAACG,IAAI,CAACI,EAAE,CAAC,CAAC;IAClC,CAAC,MAAM;MACLG,MAAM,CAACG,OAAO,CAAC,0BAA0B,CAAC;IAC5C;EACF,CAAC;EAED,oBACE,QAAC,aAAa;IAAA,UACXV,IAAI,CAACW,QAAQ,KAAKC,KAAK,iBACtB;MAAA,wBACE,QAAC,UAAU;QAAC,OAAO,EAAET,UAAW;QAAA,wBAC9B;UAAI,SAAS,EAAC,OAAO;UAAA,UAAEH,IAAI,CAACY;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eACvC;UAAG,SAAS,EAAC,WAAW;UAAA,UAAEZ,IAAI,CAACa;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,eAC1C;UAAG,SAAS,EAAC,MAAM;UAAA,UAAEb,IAAI,CAACc;QAAS;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7B,eACb,QAAC,gBAAgB;QAAA,uBACf,QAAC,MAAM;UACL,MAAM,EAAC,KAAK;UACZ,eAAe,EAAC,SAAS;UACzB,YAAY,EAAET,oBAAqB;UAAA,UACpC;QAED;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACQ;IAAA;EAEtB;IAAA;IAAA;IAAA;EAAA,QACa;AAEpB,CAAC;AAAC,GA/CIN,IAAI;EAAA,QACSD,WAAW,EAGXJ,WAAW;AAAA;AAAA,KAJxBK,IAAI;AAiDV,eAAeA,IAAI;AAEnB,MAAMgB,aAAa,GAAGpB,MAAM,CAACqB,GAAI;AACjC;AACA;AACA;AACA;AACA,CAAC;AAAC,MALID,aAAa;AAOnB,MAAME,UAAU,GAAGtB,MAAM,CAACqB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAZIC,UAAU;AAchB,MAAMC,gBAAgB,GAAGvB,MAAM,CAACqB,GAAI;AACpC;AACA;AACA,CAAC;AAAC,MAHIE,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}