{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/CmList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Button from '../button/Button';\nimport { deleteComment, modifyComment } from '../../modules/commentSlice';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CmList(_ref) {\n  _s();\n  let {\n    item,\n    setCommentLists,\n    setCommentList,\n    commentLists\n  } = _ref;\n  const [commentModify, setCommnetModify] = useState(false);\n  const [modifyValue, setModifyValue] = useState('');\n  const dispatch = useDispatch();\n\n  //코멘트 수정\n  const commentModifyButton = (commentListId, edit) => {\n    axios.patch(`http://localhost:3001/commentLists/${commentListId}`, edit);\n\n    //commentModify false 일때\n    if (!commentModify) {\n      const ModifyCommnet = window.prompt('수정을 위해서 비밀번호를 입력 해 주세요.', '비밀번호를 입력해주세요.');\n      if (ModifyCommnet === item.userPw) {\n        setCommnetModify(!commentModify);\n      } else {\n        window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n      }\n    } else {\n      //commentModify true 일때 새로운 코멘트 입력 값 변경\n\n      setCommentLists(prev => prev.map(comment => {\n        console.log('comment', comment);\n        if (comment.id === commentListId) {\n          return {\n            ...comment,\n            comment: edit\n          };\n        } else {\n          return comment;\n        }\n      }));\n\n      // dispatch(modifyComment({ id: item.id, comment: modifyValue }));\n\n      setCommnetModify(!commentModify);\n    }\n  };\n\n  // //코멘트 삭제\n  // const commentDeleteButton = () => {\n  //   const deleteCommnet = window.prompt(\n  //     '삭제를 위해서 비밀번호를 입력 해 주세요.',\n  //     '비밀번호를 입력해주세요.'\n  //   );\n  //   //비밀번호가 같을 때\n  //   if (deleteCommnet === item.userPw) {\n  //     window.confirm('정말 삭제하겠습니까?');\n\n  //     dispatch(deleteComment(item.id));\n  //   } else {\n  //     window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n  //   }\n  // };\n\n  //삭제\n  const commentDeleteButton = commentListId => {\n    axios.delete(`http://localhost:3001/commentLists/${commentListId}`);\n    const deleteCommnet = window.prompt('삭제를 위해서 비밀번호를 입력 해 주세요.', '비밀번호를 입력해주세요.');\n    //비밀번호가 같을 때\n    if (deleteCommnet === item.userPw) {\n      window.confirm('정말 삭제하겠습니까?');\n      setCommentLists(prev => prev.filter(comment => comment.id !== commentListId));\n    } else {\n      window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyleComments, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [item.comment, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-date\",\n          children: item.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-modify\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-user\",\n          children: item.userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), commentModify && /*#__PURE__*/_jsxDEV(\"input\", {\n          maxLength: \"40\",\n          type: \"text\",\n          vale: modifyValue,\n          placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n          onChange: e => {\n            setCommentList({\n              ...commentList,\n              commet: e.tar\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          backgroundColor: \"#2F80ED\",\n          radius: \"100\",\n          ClickHandler: () => commentModifyButton(item.id, modifyValue),\n          children: commentModify ? '완료하기' : '수정하기'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyleMarginRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          backgroundColor: \"#8d8d8d\",\n          radius: \"100\",\n          ClickHandler: () => commentDeleteButton(item.id),\n          children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CmList, \"RMf6DTYIjRgk6fvmGjd/Gyhmwu8=\", false, function () {\n  return [useDispatch];\n});\n_c = CmList;\nexport default CmList;\nconst StyleComments = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 24px;\n\n  .comment-date {\n    color: #535353;\n    font-size: 11px;\n    margin-left: 16px;\n  }\n\n  > p {\n    @media (max-width: 1160px) {\n      width: calc(100% / 2);\n      line-height: 1.3;\n    }\n  }\n  .comment-modify {\n    > span {\n      margin-right: 16px;\n    }\n    .comment-user {\n      font-weight: 700;\n    }\n\n    > input {\n      min-width: 160px;\n      height: 34px;\n      padding: 0 8px;\n      margin-right: 8px;\n      border: none;\n      border-bottom: 1px solid #2f80ed;\n\n      ::placeholder {\n        color: #2f80ed;\n      }\n      :focus {\n        outline: none;\n      }\n    }\n  }\n`;\n_c2 = StyleComments;\nconst StyleMarginRight = styled.span``;\n_c3 = StyleMarginRight;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CmList\");\n$RefreshReg$(_c2, \"StyleComments\");\n$RefreshReg$(_c3, \"StyleMarginRight\");","map":{"version":3,"names":["React","useState","useDispatch","styled","Button","deleteComment","modifyComment","axios","CmList","item","setCommentLists","setCommentList","commentLists","commentModify","setCommnetModify","modifyValue","setModifyValue","dispatch","commentModifyButton","commentListId","edit","patch","ModifyCommnet","window","prompt","userPw","confirm","prev","map","comment","console","log","id","commentDeleteButton","delete","deleteCommnet","filter","date","userId","e","commentList","commet","tar","StyleComments","div","StyleMarginRight","span"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/CmList.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Button from '../button/Button';\nimport { deleteComment, modifyComment } from '../../modules/commentSlice';\nimport axios from 'axios';\n\nfunction CmList({ item, setCommentLists, setCommentList, commentLists }) {\n  const [commentModify, setCommnetModify] = useState(false);\n  const [modifyValue, setModifyValue] = useState('');\n  const dispatch = useDispatch();\n\n  //코멘트 수정\n  const commentModifyButton = (commentListId, edit) => {\n    axios.patch(`http://localhost:3001/commentLists/${commentListId}`, edit);\n\n    //commentModify false 일때\n    if (!commentModify) {\n      const ModifyCommnet = window.prompt(\n        '수정을 위해서 비밀번호를 입력 해 주세요.',\n        '비밀번호를 입력해주세요.'\n      );\n      if (ModifyCommnet === item.userPw) {\n        setCommnetModify(!commentModify);\n      } else {\n        window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n      }\n    } else {\n      //commentModify true 일때 새로운 코멘트 입력 값 변경\n\n      setCommentLists((prev) =>\n        prev.map((comment) => {\n          console.log('comment', comment);\n          if (comment.id === commentListId) {\n            return { ...comment, comment: edit };\n          } else {\n            return comment;\n          }\n        })\n      );\n\n      // dispatch(modifyComment({ id: item.id, comment: modifyValue }));\n\n      setCommnetModify(!commentModify);\n    }\n  };\n\n  // //코멘트 삭제\n  // const commentDeleteButton = () => {\n  //   const deleteCommnet = window.prompt(\n  //     '삭제를 위해서 비밀번호를 입력 해 주세요.',\n  //     '비밀번호를 입력해주세요.'\n  //   );\n  //   //비밀번호가 같을 때\n  //   if (deleteCommnet === item.userPw) {\n  //     window.confirm('정말 삭제하겠습니까?');\n\n  //     dispatch(deleteComment(item.id));\n  //   } else {\n  //     window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n  //   }\n  // };\n\n  //삭제\n  const commentDeleteButton = (commentListId) => {\n    axios.delete(`http://localhost:3001/commentLists/${commentListId}`);\n\n    const deleteCommnet = window.prompt(\n      '삭제를 위해서 비밀번호를 입력 해 주세요.',\n      '비밀번호를 입력해주세요.'\n    );\n    //비밀번호가 같을 때\n    if (deleteCommnet === item.userPw) {\n      window.confirm('정말 삭제하겠습니까?');\n\n      setCommentLists((prev) =>\n        prev.filter((comment) => comment.id !== commentListId)\n      );\n    } else {\n      window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n    }\n  };\n\n  return (\n    <>\n      <StyleComments>\n        <p>\n          {item.comment}\n          <span className=\"comment-date\">{item.date}</span>\n        </p>\n        <div className=\"comment-modify\">\n          <span className=\"comment-user\">{item.userId}</span>\n          {commentModify && (\n            <input\n              maxLength=\"40\"\n              type=\"text\"\n              vale={modifyValue}\n              placeholder=\"댓글을 입력해 주세요.\"\n              onChange={(e) => {\n                setCommentList({\n                  ...commentList,\n                  commet:e.tar\n                });\n              }}\n            />\n          )}\n          <Button\n            backgroundColor=\"#2F80ED\"\n            radius=\"100\"\n            ClickHandler={() => commentModifyButton(item.id, modifyValue)}\n          >\n            {commentModify ? '완료하기' : '수정하기'}\n          </Button>\n          <StyleMarginRight />\n\n          <Button\n            backgroundColor=\"#8d8d8d\"\n            radius=\"100\"\n            ClickHandler={() => commentDeleteButton(item.id)}\n          >\n            삭제하기\n          </Button>\n        </div>\n      </StyleComments>\n    </>\n  );\n}\n\nexport default CmList;\n\nconst StyleComments = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 24px;\n\n  .comment-date {\n    color: #535353;\n    font-size: 11px;\n    margin-left: 16px;\n  }\n\n  > p {\n    @media (max-width: 1160px) {\n      width: calc(100% / 2);\n      line-height: 1.3;\n    }\n  }\n  .comment-modify {\n    > span {\n      margin-right: 16px;\n    }\n    .comment-user {\n      font-weight: 700;\n    }\n\n    > input {\n      min-width: 160px;\n      height: 34px;\n      padding: 0 8px;\n      margin-right: 8px;\n      border: none;\n      border-bottom: 1px solid #2f80ed;\n\n      ::placeholder {\n        color: #2f80ed;\n      }\n      :focus {\n        outline: none;\n      }\n    }\n  }\n`;\n\nconst StyleMarginRight = styled.span``;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,aAAa,EAAEC,aAAa,QAAQ,4BAA4B;AACzE,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,SAASC,MAAM,OAA0D;EAAA;EAAA,IAAzD;IAAEC,IAAI;IAAEC,eAAe;IAAEC,cAAc;IAAEC;EAAa,CAAC;EACrE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMgB,QAAQ,GAAGf,WAAW,EAAE;;EAE9B;EACA,MAAMgB,mBAAmB,GAAG,CAACC,aAAa,EAAEC,IAAI,KAAK;IACnDb,KAAK,CAACc,KAAK,CAAE,sCAAqCF,aAAc,EAAC,EAAEC,IAAI,CAAC;;IAExE;IACA,IAAI,CAACP,aAAa,EAAE;MAClB,MAAMS,aAAa,GAAGC,MAAM,CAACC,MAAM,CACjC,yBAAyB,EACzB,eAAe,CAChB;MACD,IAAIF,aAAa,KAAKb,IAAI,CAACgB,MAAM,EAAE;QACjCX,gBAAgB,CAAC,CAACD,aAAa,CAAC;MAClC,CAAC,MAAM;QACLU,MAAM,CAACG,OAAO,CAAC,0BAA0B,CAAC;MAC5C;IACF,CAAC,MAAM;MACL;;MAEAhB,eAAe,CAAEiB,IAAI,IACnBA,IAAI,CAACC,GAAG,CAAEC,OAAO,IAAK;QACpBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,OAAO,CAAC;QAC/B,IAAIA,OAAO,CAACG,EAAE,KAAKb,aAAa,EAAE;UAChC,OAAO;YAAE,GAAGU,OAAO;YAAEA,OAAO,EAAET;UAAK,CAAC;QACtC,CAAC,MAAM;UACL,OAAOS,OAAO;QAChB;MACF,CAAC,CAAC,CACH;;MAED;;MAEAf,gBAAgB,CAAC,CAACD,aAAa,CAAC;IAClC;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMoB,mBAAmB,GAAId,aAAa,IAAK;IAC7CZ,KAAK,CAAC2B,MAAM,CAAE,sCAAqCf,aAAc,EAAC,CAAC;IAEnE,MAAMgB,aAAa,GAAGZ,MAAM,CAACC,MAAM,CACjC,yBAAyB,EACzB,eAAe,CAChB;IACD;IACA,IAAIW,aAAa,KAAK1B,IAAI,CAACgB,MAAM,EAAE;MACjCF,MAAM,CAACG,OAAO,CAAC,aAAa,CAAC;MAE7BhB,eAAe,CAAEiB,IAAI,IACnBA,IAAI,CAACS,MAAM,CAAEP,OAAO,IAAKA,OAAO,CAACG,EAAE,KAAKb,aAAa,CAAC,CACvD;IACH,CAAC,MAAM;MACLI,MAAM,CAACG,OAAO,CAAC,0BAA0B,CAAC;IAC5C;EACF,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,aAAa;MAAA,wBACZ;QAAA,WACGjB,IAAI,CAACoB,OAAO,eACb;UAAM,SAAS,EAAC,cAAc;UAAA,UAAEpB,IAAI,CAAC4B;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C,eACJ;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBAC7B;UAAM,SAAS,EAAC,cAAc;UAAA,UAAE5B,IAAI,CAAC6B;QAAM;UAAA;UAAA;UAAA;QAAA,QAAQ,EAClDzB,aAAa,iBACZ;UACE,SAAS,EAAC,IAAI;UACd,IAAI,EAAC,MAAM;UACX,IAAI,EAAEE,WAAY;UAClB,WAAW,EAAC,2DAAc;UAC1B,QAAQ,EAAGwB,CAAC,IAAK;YACf5B,cAAc,CAAC;cACb,GAAG6B,WAAW;cACdC,MAAM,EAACF,CAAC,CAACG;YACX,CAAC,CAAC;UACJ;QAAE;UAAA;UAAA;UAAA;QAAA,QAEL,eACD,QAAC,MAAM;UACL,eAAe,EAAC,SAAS;UACzB,MAAM,EAAC,KAAK;UACZ,YAAY,EAAE,MAAMxB,mBAAmB,CAACT,IAAI,CAACuB,EAAE,EAAEjB,WAAW,CAAE;UAAA,UAE7DF,aAAa,GAAG,MAAM,GAAG;QAAM;UAAA;UAAA;UAAA;QAAA,QACzB,eACT,QAAC,gBAAgB;UAAA;UAAA;UAAA;QAAA,QAAG,eAEpB,QAAC,MAAM;UACL,eAAe,EAAC,SAAS;UACzB,MAAM,EAAC,KAAK;UACZ,YAAY,EAAE,MAAMoB,mBAAmB,CAACxB,IAAI,CAACuB,EAAE,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAG1C;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA;EACQ,iBACf;AAEP;AAAC,GAvHQxB,MAAM;EAAA,QAGIN,WAAW;AAAA;AAAA,KAHrBM,MAAM;AAyHf,eAAeA,MAAM;AAErB,MAAMmC,aAAa,GAAGxC,MAAM,CAACyC,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MA1CID,aAAa;AA4CnB,MAAME,gBAAgB,GAAG1C,MAAM,CAAC2C,IAAK,EAAC;AAAC,MAAjCD,gBAAgB;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}