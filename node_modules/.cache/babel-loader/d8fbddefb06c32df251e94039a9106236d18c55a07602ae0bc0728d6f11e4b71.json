{"ast":null,"code":"var _jsxFileName = \"/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/CmList.jsx\";\nimport { toBeInTheDOM } from '@testing-library/jest-dom/dist/matchers';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button from '../button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CmList(_ref) {\n  let {\n    item,\n    setCommentList,\n    commentList\n  } = _ref;\n  //코멘트 수정\n  const commentModifyButton = () => {\n    const ModifyCommnet = window.prompt('수정을 위해서 비밀번호를 입력 해 주세요.', '비밀번호를 입력해주세요.');\n    if (ModifyCommnet === item.userPw) {\n      setCommentList(prev => prev.map(t => {\n        if (t.id === item.id) {\n          return;\n        }\n      }));\n    } else {\n      window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n    }\n  };\n\n  //코멘트 삭제\n  const commentDeleteButton = () => {\n    const deleteCommnet = window.prompt('삭제를 위해서 비밀번호를 입력 해 주세요.', '비밀번호를 입력해주세요.');\n    //비밀번호가 같을 때\n    if (deleteCommnet === item.userPw) {\n      window.confirm('정말 삭제하겠습니까?');\n      setCommentList(prev => prev.filter(c => c.id !== item.id));\n    } else {\n      window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyleComments, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [item.comment, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"comment-date\",\n        children: item.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-modify\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"comment-user\",\n        children: item.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"comment-user\",\n        children: item.userPw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        backgroundColor: \"#2F80ED\",\n        radius: \"100\",\n        ClickHandler: commentModifyButton,\n        children: \"\\uC218\\uC815\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyleMarginRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        backgroundColor: \"#8d8d8d\",\n        radius: \"100\",\n        ClickHandler: commentDeleteButton,\n        children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = CmList;\nexport default CmList;\nconst StyleComments = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 24px;\n\n  .comment-date {\n    color: #535353;\n    font-size: 11px;\n    margin-left: 16px;\n  }\n\n  .comment-modify {\n    > span {\n      margin-right: 16px;\n    }\n    .comment-user {\n      font-weight: 700;\n    }\n  }\n`;\n_c2 = StyleComments;\nconst StyleMarginRight = styled.span``;\n_c3 = StyleMarginRight;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CmList\");\n$RefreshReg$(_c2, \"StyleComments\");\n$RefreshReg$(_c3, \"StyleMarginRight\");","map":{"version":3,"names":["toBeInTheDOM","React","styled","Button","CmList","item","setCommentList","commentList","commentModifyButton","ModifyCommnet","window","prompt","userPw","prev","map","t","id","confirm","commentDeleteButton","deleteCommnet","filter","c","comment","date","userId","StyleComments","div","StyleMarginRight","span"],"sources":["/Users/teayoung/Desktop/hh_pro/2run12jo/src/redux/components/comments/CmList.jsx"],"sourcesContent":["import { toBeInTheDOM } from '@testing-library/jest-dom/dist/matchers';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button from '../button/Button';\n\nfunction CmList({ item, setCommentList, commentList }) {\n  //코멘트 수정\n  const commentModifyButton = () => {\n    const ModifyCommnet = window.prompt(\n      '수정을 위해서 비밀번호를 입력 해 주세요.',\n      '비밀번호를 입력해주세요.'\n    );\n    if (ModifyCommnet === item.userPw) {\n      setCommentList(prev=>prev.map(t =>{\n        if(t.id === item.id){\n          return \n        }\n      }))\n    } else {\n      window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n    }\n  };\n\n  //코멘트 삭제\n  const commentDeleteButton = () => {\n    const deleteCommnet = window.prompt(\n      '삭제를 위해서 비밀번호를 입력 해 주세요.',\n      '비밀번호를 입력해주세요.'\n    );\n    //비밀번호가 같을 때\n    if (deleteCommnet === item.userPw) {\n      window.confirm('정말 삭제하겠습니까?');\n      setCommentList((prev) => prev.filter((c) => c.id !== item.id));\n    } else {\n      window.confirm('비밀번호가 틀립니다. 다시 입력 해 주세요.');\n    }\n  };\n\n  return (\n    <StyleComments key={item.id}>\n      <p>\n        {item.comment}\n        <span className=\"comment-date\">{item.date}</span>\n      </p>\n      <div className=\"comment-modify\">\n        <span className=\"comment-user\">{item.userId}</span>\n        <span className=\"comment-user\">{item.userPw}</span>\n        <Button\n          backgroundColor=\"#2F80ED\"\n          radius=\"100\"\n          ClickHandler={commentModifyButton}\n        >\n          수정하기\n        </Button>\n        <StyleMarginRight />\n        <Button\n          backgroundColor=\"#8d8d8d\"\n          radius=\"100\"\n          ClickHandler={commentDeleteButton}\n        >\n          삭제하기\n        </Button>\n      </div>\n    </StyleComments>\n  );\n}\n\nexport default CmList;\n\nconst StyleComments = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 24px;\n\n  .comment-date {\n    color: #535353;\n    font-size: 11px;\n    margin-left: 16px;\n  }\n\n  .comment-modify {\n    > span {\n      margin-right: 16px;\n    }\n    .comment-user {\n      font-weight: 700;\n    }\n  }\n`;\n\nconst StyleMarginRight = styled.span``;\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,yCAAyC;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,kBAAkB;AAAC;AAEtC,SAASC,MAAM,OAAwC;EAAA,IAAvC;IAAEC,IAAI;IAAEC,cAAc;IAAEC;EAAY,CAAC;EACnD;EACA,MAAMC,mBAAmB,GAAG,MAAM;IAChC,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CACjC,yBAAyB,EACzB,eAAe,CAChB;IACD,IAAIF,aAAa,KAAKJ,IAAI,CAACO,MAAM,EAAE;MACjCN,cAAc,CAACO,IAAI,IAAEA,IAAI,CAACC,GAAG,CAACC,CAAC,IAAG;QAChC,IAAGA,CAAC,CAACC,EAAE,KAAKX,IAAI,CAACW,EAAE,EAAC;UAClB;QACF;MACF,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACLN,MAAM,CAACO,OAAO,CAAC,0BAA0B,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAG,MAAM;IAChC,MAAMC,aAAa,GAAGT,MAAM,CAACC,MAAM,CACjC,yBAAyB,EACzB,eAAe,CAChB;IACD;IACA,IAAIQ,aAAa,KAAKd,IAAI,CAACO,MAAM,EAAE;MACjCF,MAAM,CAACO,OAAO,CAAC,aAAa,CAAC;MAC7BX,cAAc,CAAEO,IAAI,IAAKA,IAAI,CAACO,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACL,EAAE,KAAKX,IAAI,CAACW,EAAE,CAAC,CAAC;IAChE,CAAC,MAAM;MACLN,MAAM,CAACO,OAAO,CAAC,0BAA0B,CAAC;IAC5C;EACF,CAAC;EAED,oBACE,QAAC,aAAa;IAAA,wBACZ;MAAA,WACGZ,IAAI,CAACiB,OAAO,eACb;QAAM,SAAS,EAAC,cAAc;QAAA,UAAEjB,IAAI,CAACkB;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/C,eACJ;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAM,SAAS,EAAC,cAAc;QAAA,UAAElB,IAAI,CAACmB;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACnD;QAAM,SAAS,EAAC,cAAc;QAAA,UAAEnB,IAAI,CAACO;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACnD,QAAC,MAAM;QACL,eAAe,EAAC,SAAS;QACzB,MAAM,EAAC,KAAK;QACZ,YAAY,EAAEJ,mBAAoB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG3B,eACT,QAAC,gBAAgB;QAAA;QAAA;QAAA;MAAA,QAAG,eACpB,QAAC,MAAM;QACL,eAAe,EAAC,SAAS;QACzB,MAAM,EAAC,KAAK;QACZ,YAAY,EAAEU,mBAAoB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG3B;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA,GAvBYb,IAAI,CAACW,EAAE;IAAA;IAAA;IAAA;EAAA,QAwBX;AAEpB;AAAC,KA5DQZ,MAAM;AA8Df,eAAeA,MAAM;AAErB,MAAMqB,aAAa,GAAGvB,MAAM,CAACwB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MApBID,aAAa;AAsBnB,MAAME,gBAAgB,GAAGzB,MAAM,CAAC0B,IAAK,EAAC;AAAC,MAAjCD,gBAAgB;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}